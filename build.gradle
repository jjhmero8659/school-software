buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.9'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'project'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'mysql:mysql-connector-java:8.0.30'
    implementation 'jakarta.persistence:jakarta.persistence-api:2.2.3'
    implementation 'org.hibernate:hibernate-core:5.5.7.Final'
    testImplementation 'junit:junit:4.13.1'
    testImplementation 'org.projectlombok:lombok:1.18.22'
    runtimeOnly 'com.h2database:h2:1.4.200'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor('org.projectlombok:lombok')
    testAnnotationProcessor('org.projectlombok:lombok')

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    //하이버네이트 Point , Geometry 사용
    implementation group: 'org.hibernate', name: 'hibernate-spatial', version: '5.5.7.Final'

    //querydsl 추가
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    implementation "com.querydsl:querydsl-apt:${queryDslVersion}"

    implementation platform('org.springframework.data:spring-data-releasetrain:Neumann-SR1')
    implementation 'org.springframework.data:spring-data-jpa'

    //Security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.security:spring-security-oauth2-client'
    testImplementation 'org.springframework.security:spring-security-test:'

    //jwt
    implementation 'io.jsonwebtoken:jjwt:0.9.1'

    //file upload
    implementation 'commons-fileupload:commons-fileupload:1.4'

    //FCM
    implementation 'com.google.firebase:firebase-admin:9.1.1'

    // Swagger
    implementation 'io.springfox:springfox-boot-starter:3.0.0'
    implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '3.0.0'

    //valid 유효성 검사
    implementation 'org.hibernate.validator:hibernate-validator:7.0.1.Final'

    //redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    //jackson
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    implementation 'com.fasterxml.jackson.core:jackson-databind'
}


tasks.named('test') {
    useJUnitPlatform()
}
//querydsl 추가 시작
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets {
    main.java.srcDir querydslDir
}
compileQuerydsl{
    options.annotationProcessorPath = configurations.querydsl
}
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}
//querydsl 추가 끝